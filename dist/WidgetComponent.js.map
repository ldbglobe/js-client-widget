{"version":3,"file":"WidgetComponent.js","mappings":"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","sources":["webpack://js-client-widget/webpack/bootstrap","webpack://js-client-widget/webpack/runtime/make namespace object","webpack://js-client-widget/./node_modules/js-class.event-dispatcher/src/index.js","webpack://js-client-widget/./node_modules/js-class.messenger/src/index.js","webpack://js-client-widget/./src/components/WidgetComponent.js","webpack://js-client-widget/./src/WidgetComponent.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class EventDispatcher {\r\n\tconstructor(eventSource) {\r\n\t\tthis.eventSource = eventSource;\r\n\t\tthis.events = new Set();\r\n\t}\r\n\r\n\t// registration methods\r\n\tregisterEvent(eventName, callback) {\r\n\t\tif(typeof callback === \"function\")\r\n\t\t{\r\n\t\t\tif(!this.events[eventName])\r\n\t\t\t\tthis.events[eventName] = new Set();\r\n\r\n\t\t\tthis.events[eventName].add(callback)\r\n\t\t}\r\n\t}\r\n\tunregisterEvent(eventName, callback) {\r\n\t\tif(this.events[eventName])\r\n\t\t\tthis.events[eventName].delete(callback)\r\n\t}\r\n\r\n\t// trigger event\r\n\tfireEvent(eventName, data) {\r\n\t\tif(this.events[eventName])\r\n\t\t{\r\n\t\t\tthis.events[eventName].forEach(function(callback, index) {\r\n\t\t\t\tcallback(data,{\r\n\t\t\t\t\teventSource:this.eventSource,\r\n\t\t\t\t\teventName:eventName,\r\n\t\t\t\t\tdata:data\r\n\t\t\t\t});\r\n\t\t\t}.bind(this))\r\n\t\t}\r\n\t}\r\n}","import EventDispatcher from \"js-class.event-dispatcher\";\r\n\r\nexport default class Messenger {\r\n\r\n\tstatic ___ = {\r\n\t\trecipients: new Set(),\r\n\t}\r\n\r\n\tconstructor(param) {\r\n\t\tparam = typeof param ===\"string\" ? {channel:param}: param || {};\r\n\t\tthis.id = (()=>('MSG_'+[1e16]).replace(/[018]/g,a=>(a^Math.random()*16>>a/4).toString(16)))();\r\n\t\tthis.channels = new Set();\r\n\t\tthis.recipients = new Set();\r\n\r\n\t\tif(param.channel)\r\n\t\t\tthis.subscribe(param.channel);\r\n\r\n\t\tif(window.opener)\r\n\t\t\tMessenger.___.recipients.add(window.opener);\r\n\r\n\t\tthis.events = new EventDispatcher(this);\r\n\t\twindow.addEventListener('message', this.__handleMessage.bind(this))\r\n\t}\r\n\r\n\taddRecipient(recipientWindow) {\r\n\t\tMessenger.___.recipients.add(recipientWindow)\r\n\t}\r\n\r\n\tsubscribe(channel) {\r\n\t\tif(channel && typeof channel === \"string\")\r\n\t\t{\r\n\t\t\tconsole.info(`Messenger ${this.id} connected to ${channel}`);\r\n\t\t\tthis.channels.add(channel)\r\n\t\t}\r\n\t}\r\n\tunsubscribe(channel) {\r\n\t\tthis.channels.delete(channel)\r\n\t}\r\n\r\n\tonMessage(callback,channels=null) {\r\n\t\tchannels = typeof channels === \"string\" ? [channels] : channels;\r\n\t\tchannels = channels && channels.length ? channels : [];\r\n\t\tthis.events.registerEvent('message',function(callback, channels, data, eventSource) {\r\n\t\t\tif(channels.length===0 || channels.includes(data.channel))\r\n\t\t\t\tcallback(data.message,data.channel)\r\n\t\t}.bind(this, callback, channels))\r\n\t}\r\n\r\n\t__handleMessage(e) {\r\n\r\n\t\tlet data = {}\r\n\t\ttry {\r\n\t\t\tdata = typeof e.data === \"string\" ? JSON.parse(e.data) : (e.data || {});\r\n\t\t}\r\n\t\tcatch {\r\n\t\t\t// nothing to do;\r\n\t\t}\r\n\r\n\t\tif(data.format === 'messenger')\r\n\t\t{\r\n\t\t\t// relay all channel on other windows\r\n\t\t\tthis.send(data.message,data.channel,e.source,true)\r\n\r\n\t\t\t// fire local event if channel is subscribed\r\n\t\t\tif(this.channels.has(data.channel))\r\n\t\t\t{\r\n\t\t\t\tthis.events.fireEvent('message',data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsend(message,destinationChannel=null,emiter=null,relay=false) {\r\n\t\tif(destinationChannel && !this.channels.has(destinationChannel))\r\n\t\t{\r\n\t\t\tif(!relay)\r\n\t\t\t\tthrow `Messenger.send not subscribed to ${destinationChannel}`\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar channels = destinationChannel ? new Set([destinationChannel]) : this.channels;\r\n\t\t\tif(channels.size>0)\r\n\t\t\t{\r\n\t\t\t\tchannels.forEach(function(message,destinationChannel,emiter,channel) {\r\n\t\t\t\t\tif(destinationChannel===null || destinationChannel === channel)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.__sendToWindows(JSON.stringify({\r\n\t\t\t\t\t\t\tformat:'messenger',\r\n\t\t\t\t\t\t\tversion:1,\r\n\t\t\t\t\t\t\temiter:this.id,\r\n\t\t\t\t\t\t\tchannel:channel,\r\n\t\t\t\t\t\t\tmessage:message,\r\n\t\t\t\t\t\t}),emiter);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this,message,destinationChannel,emiter));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// No destination channels available, Nothing to do ^^\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t__sendToWindows(payload,emiter) {\r\n\t\tMessenger.___.recipients.forEach(function(emiter,recipient){\r\n\t\t\tif(recipient && typeof recipient.postMessage === \"function\")\r\n\t\t\t{\r\n\t\t\t\tif(emiter!==recipient && !recipient.closed)\r\n\t\t\t\t\trecipient.postMessage(payload,\"*\");\r\n\t\t\t}\r\n\t\t}.bind(this,emiter))\r\n\t}\r\n}","import EventDispatcher from \"js-class.event-dispatcher\";\r\nimport Messenger from \"js-class.messenger\";\r\n\r\nexport default  class WidgetComponent {\r\n\tstatic ___ = { };\r\n\r\n\tconstructor(param) {\r\n\t\tparam = param || {};\r\n\r\n\t\tthis.___ = {\r\n\t\t\tid: param.id || window.name, // as default behavior, JS client set the ID in the windows name\r\n\t\t\tdefaults:undefined,\r\n\t\t\tdefaultsVersion:0,\r\n\t\t};\r\n\r\n\t\tconsole.log(this.___.id)\r\n\r\n\t\tthis.___.events = new EventDispatcher(this);\r\n\t\tthis.___.messenger = new Messenger({channel:this.___.id});\r\n\t\tthis.___.messenger.onMessage(this.___handleMessage.bind(this));\r\n\r\n\t\t// send a ready message to the opener\r\n\t\tsetTimeout(function(){ this.___fire('widget.ready',null,\"broadcast\"); }.bind(this),0);\r\n\r\n\t\tthis.___on('client.postDefaults',this.___handleDefaults.bind(this));\r\n\t}\r\n\r\n\t___getId() { return this.___.id; }\r\n\tgetId() { return this.___getId(); }\r\n\r\n\t/* --------------------------------------------------\r\n\t * Native available events\r\n\t * --------------------------------------------------\r\n\t * client.postDefaults // avoid to use this one\r\n\t * widget.defaults.init\r\n\t * widget.defaults.update\r\n\t */\r\n\r\n\t___on(eventName,callback) { this.___.events.registerEvent(eventName,callback); }\r\n\ton(eventName,callback) { this.___on(eventName,callback); }\r\n\r\n\t___off(eventName,callback) { this.___.events.unregisterEvent(eventName,callback); }\r\n\toff(eventName,callback) { this.___off(eventName,callback); }\r\n\r\n\t// all the events are handled by the messenger services\r\n\t___fire(eventName,data,dest=null) {\r\n\t\t// send event to the widget\r\n\t\tif(dest === null || dest === \"broadcast\")\r\n\t\t{\r\n\t\t\tthis.___.messenger.send({eventName, data});\r\n\t\t}\r\n\t\t// fire the event locally\r\n\t\tif(dest === null || dest === \"local\")\r\n\t\t{\r\n\t\t\tthis.___.events.fireEvent(eventName, data);\r\n\t\t}\r\n\t}\r\n\tfire(eventName,data,dest=null) { this.___fire(eventName,data,dest); }\r\n\r\n\t___handleMessage(message) {\r\n\t\tif(message.eventName)\r\n\t\t{\r\n\t\t\t// received event => only local dispatch\r\n\t\t\tthis.___fire(message.eventName,message.data,\"local\");\r\n\t\t}\r\n\t}\r\n\r\n\t___handleDefaults(defaults)\t{\r\n\t\tthis.___.defaults = defaults;\r\n\t\tthis.___.defaultsVersion++;\r\n\r\n\t\tif(this.___.defaultsVersion===1)\r\n\t\t\tthis.___fire('widget.defaults.init',this.___.defaults,'local')\r\n\t\telse\r\n\t\t\tthis.___fire('widget.defaults.update',this.___.defaults,'local')\r\n\t}\r\n\t___getDefaults() {\r\n\t\treturn this.___.defaults;\r\n\t}\r\n\tgetDefaults() {\r\n\t\treturn this.___getDefaults();\r\n\t}\r\n\r\n\t___isDefaultsAvailable() {\r\n\t\treturn this.___.defaultsVersion>0\r\n\t}\r\n\tisDefaultsAvailable() {\r\n\t\treturn this.___isDefaultsAvailable();\r\n\t}\r\n}","import WidgetComponent from \"./components/WidgetComponent.js\"\r\nwindow.WidgetComponent = WidgetComponent;"],"names":["__webpack_require__","exports","Symbol","toStringTag","Object","defineProperty","value","EventDispatcher","constructor","eventSource","this","events","Set","registerEvent","eventName","callback","add","unregisterEvent","delete","fireEvent","data","forEach","index","bind","Messenger","static","recipients","param","channel","id","replace","a","Math","random","toString","channels","subscribe","window","opener","___","addEventListener","__handleMessage","addRecipient","recipientWindow","console","info","unsubscribe","onMessage","length","includes","message","e","JSON","parse","format","send","source","has","destinationChannel","emiter","relay","size","__sendToWindows","stringify","version","payload","recipient","postMessage","closed","WidgetComponent","name","defaults","undefined","defaultsVersion","log","messenger","___handleMessage","setTimeout","___fire","___on","___handleDefaults","___getId","___off","dest","___getDefaults","___isDefaultsAvailable"],"sourceRoot":""}